/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package beastlog;
import dao.ConnectionProvider;
import org.jfree.chart.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author user1
 */
public class Stat0 extends javax.swing.JFrame {
    private String currentUsername;
    /**
     * Creates new form Stat0
     */
    public Stat0(String username) {
        initComponents();
        this.currentUsername = username;
        
        comboMuscle.addItem("Chest");
        comboMuscle.addItem("Back");
        comboMuscle.addItem("Shoulders");
        comboMuscle.addItem("Biceps");
        comboMuscle.addItem("Triceps");
        comboMuscle.addItem("Abs");
        comboMuscle.addItem("Glutes");
        comboMuscle.addItem("Calves");
        comboMuscle.addItem("Forearms");
        comboMuscle.addItem("Traps");
        comboMuscle.addItem("Hamstrings");
        comboMuscle.addItem("Quadriceps");
        
        
        comboMuscle.addActionListener(e -> {
        String selectedMuscle = (String) comboMuscle.getSelectedItem();
        updateExercisesCombo(selectedMuscle);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboMuscle = new javax.swing.JComboBox<>();
        comboExercise = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(graphPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 210, 650, 410));

        jButton1.setBackground(new java.awt.Color(255, 51, 0));
        jButton1.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Show Line Graph");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 540, -1, 50));

        jLabel1.setFont(new java.awt.Font("Footlight MT Light", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 51, 0));
        jLabel1.setText("Select");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, -1));

        jLabel2.setFont(new java.awt.Font("Footlight MT Light", 1, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 51, 0));
        jLabel2.setText("Muscle");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, -1, -1));

        jLabel3.setFont(new java.awt.Font("Footlight MT Light", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 51, 0));
        jLabel3.setText("Exercise");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 440, -1, -1));

        comboMuscle.setFont(new java.awt.Font("Footlight MT Light", 0, 20)); // NOI18N
        comboMuscle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMuscleActionPerformed(evt);
            }
        });
        getContentPane().add(comboMuscle, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 250, 40));

        comboExercise.setFont(new java.awt.Font("Footlight MT Light", 0, 20)); // NOI18N
        getContentPane().add(comboExercise, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 430, 250, 40));

        jButton2.setBackground(new java.awt.Color(255, 51, 0));
        jButton2.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("More");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 680, 90, 50));

        jButton3.setBackground(new java.awt.Color(255, 51, 0));
        jButton3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 680, 90, 50));

        jButton4.setBackground(new java.awt.Color(255, 51, 0));
        jButton4.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Back Home Page");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 680, -1, 50));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stat.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String exo = comboExercise.getSelectedItem().toString();  
        afficherGraphique(currentUsername, exo);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
        new Stats1(currentUsername).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboMuscleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMuscleActionPerformed
        String selectedMuscle = (String) comboMuscle.getSelectedItem();
        updateExercisesCombo(selectedMuscle);
    }//GEN-LAST:event_comboMuscleActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        setVisible(false);
        new HomePage(currentUsername).setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
        new Stats(currentUsername).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void updateExercisesCombo(String muscle) {
        try {
            Connection con = ConnectionProvider.orclConnection();
            String query = " SELECT nom_exercice FROM muscle WHERE muscle_cible = ? ";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, muscle.trim());
            ResultSet rs = ps.executeQuery();

            comboExercise.removeAllItems(); // Vider les anciens exercices

            while (rs.next()) {
                // Récupération par index de colonne
                String exercice = rs.getString(1); 
                comboExercise.addItem(exercice);
            }

            rs.close();
            ps.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur : " + e.getMessage());
        }
    }
    
    public void afficherGraphique(String username, String exercice) {
    try {
        // 1. Créer le dataset
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        Connection con = ConnectionProvider.orclConnection();
        String query = "SELECT date_ex, poids FROM exercise WHERE username_ex = ? AND exercise = ? ORDER BY date_ex";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, username);
        ps.setString(2, exercice);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            Date date = rs.getDate("date_ex");
            double poids = rs.getDouble("poids");
            String dateStr = new SimpleDateFormat("dd-MM-yyyy").format(date);
            dataset.addValue(poids, "Poids", dateStr);
        }

        rs.close();
        ps.close();
        con.close();

        // 2. Créer le graphe
        JFreeChart chart = ChartFactory.createLineChart(
                "Progression of " + exercice,
                "Date",
                "Weight (kg)",
                dataset,
                PlotOrientation.VERTICAL,
                false, true, false);

        // 3. Afficher le graphe dans graphPanel
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new java.awt.Dimension(graphPanel.getWidth(), graphPanel.getHeight()));

        graphPanel.removeAll();  // vider avant d’ajouter
        graphPanel.setLayout(new java.awt.BorderLayout());
        graphPanel.add(chartPanel, java.awt.BorderLayout.CENTER);
        graphPanel.validate();
        graphPanel.repaint();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erreur graphique : " + e.getMessage());
    }
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stat0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stat0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stat0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stat0.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stat0("username").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboExercise;
    private javax.swing.JComboBox<String> comboMuscle;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}

package model;

import dao.ConnectionProvider;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.SQLException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

/**
 *
 * @author user1
 */
public class User {
    public int id;
    public String first_name;
    public String last_name;
    public String username;
    public String mdp;
    public int age;
    public String gender;
    
    public User(){
        this.id=0;
        this.first_name="";
        this.last_name="";
        this.username="";
        this.mdp="";
        this.age=0;
        this.gender="";
    }
    
    public User(int id, String first_name, String last_name, String username, String mdp, int age, String gender){
        this.id=id;
        this.first_name=first_name;
        this.last_name=last_name;
        this.username=username;
        this.mdp=mdp;
        this.age=age;
        this.gender=gender;
    }
    
    public static void creerTable(){
        try{
            String ExerciseTable="CREATE TABLE utilisateur (id_user NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, first_name VARCHAR2(50), last_name VARCHAR2(50) , username VARCHAR2(50), mdp VARCHAR2(50), age NUMBER, gender VARCHAR2(50) )";
            ConnectionProvider.operations(ExerciseTable, "utilisateurTable created successfully");
    }
       catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void save() throws SQLException{
        
      
        try(Connection con = ConnectionProvider.orclConnection()){ 
            if (con != null){
                String query = "INSERT INTO utilisateur (first_name, last_name, username, mdp, age, gender) VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement ps = con.prepareStatement(query);

                ps.setString(1, first_name); 
                ps.setString(2, last_name);
                ps.setString(3, username);
                ps.setString(4, mdp);
                ps.setInt(5, age);
                ps.setString(6, gender);

                ps.executeUpdate();
                ps.close();
            }else{
                throw new SQLException ("Connexion DB failed.");
            }   
        }catch(SQLException e){
            throw e;
        }
    }
    
    public boolean UsernameExists() {
        boolean exists = false;
        try {
            Connection con = ConnectionProvider.orclConnection();
            
            String query = "SELECT COUNT(*) FROM utilisateur WHERE username = ?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, username);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                exists = rs.getInt(1) > 0;
            }
            rs.close();
            pst.close();
            con.close();
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return exists;
    }
}

